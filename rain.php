<?php

function printCyclicGradientLogo() {
    // Логотип
    $logoLines = [
                                     
                                                                         
        "██████╗  █████╗ ███████╗████████╗    ██████╗ ███████╗██████╗  ██████╗ ██████╗ ████████╗",
        "██╔══██╗██╔══██╗██╔════╝╚══██╔══╝    ██╔══██╗██╔════╝██╔══██╗██╔═══██╗██╔══██╗╚══██╔══╝",
        "██║  ██║███████║███████╗   ██║       ██████╔╝█████╗  ██████╔╝██║   ██║██████╔╝   ██║   ",
        "██║  ██║██╔══██║╚════██║   ██║       ██╔══██╗██╔══╝  ██╔═══╝ ██║   ██║██╔══██╗   ██║   ",
        "██████╔╝██║  ██║███████║   ██║       ██║  ██║███████╗██║     ╚██████╔╝██║  ██║   ██║   ",
        "╚═════╝ ╚═╝  ╚═╝╚══════╝   ╚═╝       ╚═╝  ╚═╝╚══════╝╚═╝      ╚═════╝ ╚═╝  ╚═╝   ╚═╝   "
                                                                                               
                                         
         
];

// Параметры градиента
$totalSteps = 100; // Количество шагов в цикле
$speed = 50000;    // Задержка между обновлениями (в микросекундах)

// Основной цикл
for ($step = 0; $step < $totalSteps; $step++) {
    // Очистка экрана
    echo "\033[H\033[J";

    foreach ($logoLines as $lineIndex => $line) {
        // Вычисляем цвет для текущей строки и текущего шага
        $progress = ($step + $lineIndex * 10) % $totalSteps; // Смещение для каждой строки
        $r = (int)(127 * (1 + sin(2 * M_PI * $progress / $totalSteps))); // Красный (от 0 до 255)
        $g = (int)(127 * (1 + sin(2 * M_PI * ($progress / $totalSteps + 0.33)))); // Зеленый
        $b = (int)(127 * (1 + sin(2 * M_PI * ($progress / $totalSteps + 0.66)))); // Синий
        $color = "\033[38;2;{$r};{$g};{$b}m";

        // Вывод строки
        echo $color . $line . "\033[0m\n";
    }

    // Задержка
    usleep($speed);
}
}

printCyclicGradientLogo();
?>